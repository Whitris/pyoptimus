[project]
name = "pyoptimus"
version = "0.1.0"
description = "Advanced Python Profiling & Optimization Toolkit"
authors = [{ name="Nicola Marcantognini", email="nicola.marcantognini@outlook.com" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.9"
dependencies = []

[project.urls]
Homepage = "https://github.com/Whitris/pyoptimus"
Repository = "https://github.com/Whitris/pyoptimus"
Documentation = "https://github.com/Whitris/pyoptimus#readme"

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
lint = [
    "ruff"
]
test = [
    "pytest"
]
hooks = [
    "pre-commit"
]


[tool.pytest.ini_options]
testpaths = [
    "tests"
]
pythonpath = ["."]

[tool.ruff]
line-length = 100
fix = true
exclude = [
  "build/",
  "migrations/",
]

[tool.ruff.lint]
select = [
  "E",      # Errori PEP8 base
  "F",      # Errori di flake8
  "B",      # Bugbear: errori comuni di coding
  "I",      # Import sorting
  "C90",    # Complexity: McCabe
  "T",      # Type annotations
  "N",      # Naming style
  "S",      # Sicurezza (bandit)
  "D",      # Docstring
  "UP",     # Aggiornamenti Python moderni
  "A",      # Built-in shadowing
  "ASYNC",  # Errori async
  "TRY",    # Try/Except errori
  "SIM",    # SemplicitÃ , semplificazione
  "PT",     # Pytest best practices
]
ignore = [
  "D203",   # Prefer D211 (NO blank line before class)
  "D213",   # Prefer D212 (multi-line summary on first line)
  "S101",   # Idiomatic use of pytest assert
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
]
